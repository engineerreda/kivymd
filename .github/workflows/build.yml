name: CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t my-buildozer-image - <<EOF
          FROM ubuntu:20.04

          # Create a non-root user
          RUN useradd -ms /bin/bash builder

          # Switch to the non-root user
          USER builder

          # Install dependencies
          RUN apt-get update && \
              apt-get install -y software-properties-common && \
              add-apt-repository ppa:deadsnakes/ppa && \
              apt-get update && \
              apt-get install -y python3.10 python3.10-venv openjdk-11-jdk autoconf libtool pkg-config zlib1g-dev libffi-dev libssl-dev build-essential git unzip wget

          # Set up virtual environment
          RUN python3.10 -m venv env && \
              source env/bin/activate && \
              python -m pip install --upgrade pip setuptools wheel && \
              pip install buildozer cython kivy

          # Set working directory
          WORKDIR /project
EOF

      # Step 4: Run Docker Container
      - name: Run Docker Container
        run: |
          docker run --rm \
            -v "${PWD}:/project" \
            -w /project \
            --user "$(id -u):$(id -g)" \
            my-buildozer-image bash -c " \
            source env/bin/activate && \
            if [ ! -f buildozer.spec ]; then buildozer init --profile=android; fi && \
            buildozer --noinput android debug"

      # Step 5: Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: bin/*.apk
